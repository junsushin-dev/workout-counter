# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Front-end CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    defaults:
      run:
        working-directory: packages/frontend

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/develop.key
          chmod 600 ~/.ssh/develop.key
          cat >>~/.ssh/config <<END
          Host develop
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/develop.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.PROD_USERNAME }}
          SSH_KEY: ${{ secrets.PROD_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.PROD_HOST }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Run build
        run: yarn build

      - name: Sync build files to server
        run: rsync -avz ./build/ develop:~/www/data
